Organize this TODO file

Find the reason behind segfault in EndPict() in endgame.c

autosave

I think that drawing the bar graph also runs the cpu flat out. Even worse, I
think that it also pauses audio and video.

in the baby screens, don't down sample then up sample

factor out common parts of replay.c and mis_c.c

preload next frame during mission playback so transitions are smooth

Soviet Newscaster in the 3rd animated segment (Close Out) has a pretty significant
delay before starting the animation

Audio isn't in sync for the newscasters

=======
implement config opts for no anim

clean up extra gr_sync's

Remove up ENDTURN.TMP, EVENT.TMP, REPLAY.DAT on exit

================================================================
enhancements:

optimize grPutPixel and grGetPixel

the gx routines should clip - thats easy, but right now they
make assertions about arguments. Problem fixed in port.c

Yank strings into a separate string table

================================================================
possible old bugs

in RDafford, figure out how this came to be MaxRD = 80, but Safety = 90 once:
 if (class==2) roll+=Data->P[plr].Manned[index].MaxRD - Data->P[plr].Manned[index].Safety;

================================================================
CODE MAINTENANCE

Clean up header files.

Reduce global variables, most should be static anyway.

Comment mysterious bits & pieces.

Remove "magic numbers", change to #defines or enums.

Comment important data structures.

Introduce less cryptic names for some variables, especially globals!

BIG THING: Separate game logic and AI from every other stuff
================================================================

release checklist

check with valgrind
compile with -O
compile with -DNDEBUG
